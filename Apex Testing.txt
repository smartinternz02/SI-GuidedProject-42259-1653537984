                                  APEX TESTING

Get Started with Apex Unit Test:

VerifyDate.apxc

public class VerifyDate {
    public static Date CheckDates(Date date1, Date date2) {
if(DateWithin30Days(date1,date2)) {
return date2;
} 
else {
return SetEndOfMonthDate(date1);
}
}
	
private static Boolean DateWithin30Days(Date date1, Date date2) {
if( date2 < date1) { return false; 
}

Date date30Days = date1.addDays(30); 
if( date2 >= date30Days ) { return false; }
else { return true; }
}

private static Date SetEndOfMonthDate(Date date1) {
Integer totalDays = Date.daysInMonth(date1.year(), date1.month());
Date lastDay = Date.newInstance(date1.year(), date1.month(), totalDays);
return lastDay;
}
}


TestVerifyDate.apxc

@isTest
public class TestVerifyDate {
    @isTest static void test1(){
       Date d=verifyDate.CheckDates(Date.parse('01/01/2022'),Date.parse('01/03/2022'));
       System.assertEquals(Date.parse('01/03/2022'),d);
    }
    @isTest static void test2(){
       Date d=verifyDate.CheckDates(Date.parse('01/01/2022'),Date.parse('03/03/2022'));
       System.assertEquals(Date.parse('01/31/2022'),d);
    }


}


Test Apex Triggers:

RestrictContactByName.apxt

trigger RestrictContactByName on Contact (before insert, before update) {
    For (Contact c : Trigger.New) {
if(c.LastName == 'INVALIDNAME') {
c.AddError('The Last Name "'+c.LastName+'" is not allowed for DML');
}
}
}

TestRestrictContactByName.apxc

@isTest
public class TestRestrictContactByName {
    @isTest
    public static void testContact(){
        Contact ct=new Contact();
        ct.LastName='INVALIDNAME';
        Database.SaveResult res=Database.insert(ct,false);
        System.assertEquals('The Last Name "INVALIDNAME" is not allowed for DML',res.getErrors()[0].getMessage());
    }

}



Create Test data for Apex Tests:

RandomContactFactory.apxc

public class RandomContactFactory {
    public static List<Contact> generateRandomContacts(Integer num,String lastName){
        List<Contact> contactList=new List<Contact>(); 
        for(Integer i=1;i<=num;i++){
            Contact ct=new Contact(FirstName='Test'+i,LastName=lastName);
            contactList.add(ct);
        }
        return contactList;
    }
}
